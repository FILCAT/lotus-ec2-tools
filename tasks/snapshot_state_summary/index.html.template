<!DOCTYPE html>
<html>
<head>
  <title>Filecoin State Usage Summary</title>
  <script src="https://cdn.plot.ly/plotly-latest.min.js"></script>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 0;
      padding: 0;
    }

    .container {
      margin: 0 auto;
      padding: 20px;
    }

    .chart {
      margin-bottom: 40px;
      height: 800px;

    }

    h1 {
      text-align: center;
      margin-bottom: 30px;
    }
  </style>
</head>
<body>
  <div class="container">
    <h1>Filecoin State Usage Summary</h1>

    <div id="chartsContainer" class="chart"></div>
  </div>

  <script>
    var snapshotData = /* JSON data for snapshot */;

      // Convert the object to an array of key-value pairs
  const snapshotArray = Object.entries(snapshotData);

  // Sort the array based on the date strings
  snapshotArray.sort((a, b) => b[0].localeCompare(a[0]));


  // Iterate over the sorted array
    // Iterate over each snapshot and create a treemap chart
  snapshotArray.forEach(([title, data]) => {


      var data = snapshotData[title];

      // Extract the necessary data from the snapshot data
      var parents = [];
      var names = [];
      var values = [];
      var percentages = [];

      var totalValue = 0;
      for (var key in data) {
        var path = key;
        var name = key;
        var parent = path.substring(0, path.lastIndexOf('/'));
        if (key === '/') {
          parent = '';
        }
        var stats = data[key];
        var value = stats['Size'];
        totalValue += value;
        parents.push(parent);
        names.push(name);
        values.push(value);
      }

      // Calculate percentages
      for (var i = 0; i < values.length; i++) {
        var percentage = ((values[i] / totalValue) * 100).toFixed(2) + '%';
        percentages.push(percentage);
      }

      var chartId = 'chart-' + title.toLowerCase().replace(/ /g, '-');

      // Create the treemap chart using Plotly.js
      var layout = {
        title: title + ' - Treemap Chart'
      };

      var trace = {
        type: 'treemap',
        labels: names,
        parents: parents,
        values: values,
        text: percentages,  // Add percentages as text
        hovertemplate: '<b>%{label}</b><br><br>' +
                       'Value: %{value}<br>' +
                       'Percentage: %{text}<br>'
      };

      var config = {
        responsive: true
      };

      var chartData = [trace];

      // Create a new div element for each chart
      var chartDiv = document.createElement('div');
      chartDiv.setAttribute('id', chartId);
      chartDiv.classList.add('chart');

      // Append the chart div to the container
      var chartsContainer = document.getElementById('chartsContainer');
      chartsContainer.appendChild(chartDiv);

      Plotly.newPlot(chartId, chartData, layout, config);
    })
  </script>
</body>
</html>
